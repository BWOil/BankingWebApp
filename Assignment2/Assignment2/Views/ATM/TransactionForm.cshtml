@using Assignment2.Utilities
@model Assignment2.ViewModels.TransactionFormViewModel
@{
    string freeService = AccountUtilities.AccountQualifiesForFreeServiceFee(@Model.CurrentAccount) ? "free" : "notFree";
}

<div class="border-style border-corner mb-3">
    <h3 class="display-6 md-5 account-heading border-corner center-heading">Account Number @Model.CurrentAccount.AccountNumber (@(Model.CurrentAccount.AccountType == "S" ? "Saving" : "Checking"))</h3>


    <div class="center-form">
        <form asp-action="ConfirmTransaction" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model.ActionType == TransactionType.Transfer.ToString())
            {
                <div class="form-group mb-3">
                    <label asp-for="DestinationAccountNumber" class="control-label mb-1">Destination Account Number</label>
                    <select asp-for="DestinationAccountNumber" name="DestinationAccountNumber" class="form-select mb-1" data-val="true" data-val-required="The destination account number field is required.">
                        <option value="" selected disabled>Select one account</option>
                        @foreach (var account in Model.AllAccounts)
                        {
                            <option value="@account.AccountNumber">Account Number: @account.AccountNumber, Account Type: @(account.AccountType == "S" ? "Saving" : "Checking")</option>
                        }
                    </select>
                    <span asp-validation-for="DestinationAccountNumber" class="text-danger"></span>
                </div>
            }

            <div class="form-group mb-3">
                <label asp-for="Amount" class="control-label mb-1">Amount</label>
                <input asp-for="Amount" name="Amount" class="form-control mb-1"
                       data-val="true" data-val-number="The field Amount must be a number."
                       data-val-required="The Amount field is required." />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Comment" class="control-label mb-1">Comment</label>
                <input asp-for="Comment" name="Comment" class="form-control mb-1"
                       data-val="true" data-val-length="The comment field must be less than 30 characters."
                       data-val-length-max="30" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <input type="hidden" id="ActionType" name="ActionType" value="@Model.ActionType" />
            <input type="hidden" id="AccountNumber" name="AccountNumber" value="@Model.CurrentAccount.AccountNumber" />
            <input type="hidden" id="AccountType" name="AccountType" value="@Model.CurrentAccount.AccountType" />
            <input type="hidden" id="Balance" name="Balance" value="@Model.CurrentAccount.Balance" />
            <input type="hidden" id="FreeService" name="FreeService" value="@freeService" />

            <div class="form-group mb-3">
                <input type="submit"  value="@Model.ActionType" class="form-btn" />
            </div>
        </form>
    </div>
</div>



<div class="button-container">
    <a asp-controller="Customer" asp-action="Index" class="btn btn-primary">Back to Accounts</a>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @{ /* await Html.RenderPartialAsync("_ValidationScriptsPartial"); */ }
}
